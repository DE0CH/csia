Action to Test,Method of Testing,Expected Results,Success Criteria
"When the upload is invalid, it should gracefully fall back to an none-intrusive error message","Alpha Testing, Beta Testing, User Acceptance Testing, Debugging","Normal Input: The user uploads a paper. Expected Output: The website responds immediately to user's and start processing. Abnormal Input: The user selects a file that is not a PDF, leaves some fields empty, or clicks the button multiple times. Expected Output: The website should nicely notify the user that they have not inputted the right data (i.e. no js alter()). The user should not be able to submit the form multiple times. Extreme Input: Adversary tries to upload paper into the base without permission. Expected Output: The website should block the request.","1.1, 2.2"
User should be notified when there is an error in the server,"Alpha Testing, Debugging","Normal Input: Everything works in the server. Expected Output: Everything proceeds as normal. Abnormal Input: The server crashes. Expected Output: A custom 500 page that notifies the user that something went wrong in the server. Extreme Input: The server crashes again when trying to catch the error. Expected Output: falls back to an even safer error page that is more unlikely to fail.",All
"If a paper fails to upload or process, the server should display as much information as possible without entirely crashing","Alpha Testing, Debugging","Normal Input: Everything works. Expected Output: Everything proceeds as normal. Abnormal Input: The file is corrupt such that the server cannot process the file. Expected Output: when the user requests for the file, the server should display that the file has failed to render, but the failure should not affect any other paper. Extreme Input: the file triggers an exception in unexpected place. Expected Output: the paper that is being uploaded should be the only paper that is affect by the bug.","1.3, 1.5, 1.6"
User can log in,"Alpha Testing,Beta Testing,User Acceptance Testing","Normal Input: the user logs in with Google clicking the right buttons. Expected Output: the user logs in as normal. Abnormal Input: the users logs in with the wrong email account. Expected Output: the user is still logged in, but they can log out. Extreme Input: the user does not accept any cookie. Expected Output: login fails.","2.1, 2.2"
Support for zooming,"Alpha Testing, User Acceptance Testing","Normal Input:the user views it on a desktop or laptop with a large screen, or the user views it on a phone with a small screen. Expected Output: The website functions as normal and all functions are accessible. Abnormal Input: The user zooms in roo much. Expected Output: The website UI breaks down. Extreme Input: none","3.1"
All the links in the website are valid,"Alpha Testing,Beta Testing,User Acceptance Testing","Normal Input: The user clicks on a link on the page. Expected Output: the website functions as normal. Abnormal Input: The user enters something random into the browser address bar. Expected Output: the website returns a nice 404 page with helpful links. Extreme Input: attacker tries to inject code with the url. Expected Output: the server blocks it.",All
The Admin can assign new editors,"Alpha Testing, Beta Testing, Integration Testing","Normal Input: the user tries to add new user to editors. Expected Output: the user can edit the database now. Abnormal Input: none. Extreme Input: none",1.3
The PDF processor can successfully screenshot the first page of the PDF,"Alpha Testing, User Acceptance Testing, Debugging","Normal Input: the user uploads a valid PDF. Expected Output: the screenshot is successfully taken. Abnormal Input: The user selected the wrong PDF. Expected Output: the PDF is still processed, but the user can delete it later. Extreme Input: the user uploads an invalid PDF. Expected Output: the processor returns an error message","1.5, 1.6"
"Browser notifies that the site is encrypted in transit (in Firefox, there is a padlock icon on the left of the address bar)","Alpha Testing, Integrating Testing","Normal Input: the user requests for the HTTPS site. Expected Output: the server returns the signed and encrypted site. Abnormal Input: the user requests for the HTTP site. Expected Output: the server redirects the request to HTTPS. Extreme input: none.","2.3"
No plain text password stored in the database,"Alpha Testing, Debugging","Input: none","2.4"
